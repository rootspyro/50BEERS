---
import Layout from '../../layouts/Layout.astro';
import PostSection from "../../components/postSection.tsx"
import ContactForm from "../../components/contactForm.tsx"

import { ui } from '../../i18n/ui';

const contactLang = {
  name: ui.es['contact.name'],
  email: ui.es['contact.email'],
  message: ui.es['contact.message'],
  send: ui.es['contact.send']
}

const postsLang = {
  filters: {
    defaultSearch: ui.es['posts.defaultSearch'],
    defaultSortBy: ui.es['posts.sortBy'],
    defaultCountry: ui.es['posts.defaultCountry'],
    defaultLocation: ui.es['posts.defaultLocation'],
    defaultCategory: ui.es['posts.defaultCategory'],
    categoryTitle: ui.es['posts.categoryTitle'],
  },
  popularDrinks: ui.es['posts.popular'],
  itemsFound: ui.es['posts.itemsFound'],
  notFound: {
    title1: ui.es['posts.notFound.1'],
    title2: ui.es['posts.notFound.2'],
    text: ui.es['posts.notFound.text'],
    cta: ui.es['posts.notFound.cta'],
  },
  aboutMe: {
    title: ui.es['posts.aboutme.title'],
    part1: ui.es['posts.aboutme.1'],
    part2: ui.es['posts.aboutme.2'],
    part3: ui.es['posts.aboutme.3'],
    part4: ui.es['posts.aboutme.4'],
    part5: ui.es['posts.aboutme.5'],
  }
}

// fetch countries
const API_HOST = import.meta.env.PUBLIC_API_HOST

interface country {
  id: string;
  name: string;
  createdAt: string;
  updatedAt: string;
}

interface location {
  id: string;
  name: string;
  url: string;
  comments: string;
  createdAt: string;
  updatedAt: string;
}

interface tag {
  id: string;
  name: string;
  createdAt: string;
  updatedAt: string;
}

interface counts {
  all: number;
  whiskys: number;
  rums: number;
  beers: number;
  wines: number;
  others: number;
}

let countries: country[] = []

try {

  const endpoint = API_HOST + "/country/blog"
  const countriesResult = await fetch(endpoint, {
    headers: {
      "Accept-Language": "es"
    }
  })
  const countriesData = await countriesResult.json()

  if (countriesData.status == "success") {
    countries = countriesData.data.items 
  } if (countriesData.status == "error") {
    console.log(countriesData.error)  
  } 

} catch(err) {
  console.log(err)
}

let locations: location[] = []

try {

  const endpoint = API_HOST + "/location/blog"
  const locationsResult = await fetch(endpoint, {headers: {"Accept-Language": "es"}})
  const locationsData = await locationsResult.json()

  if (locationsData.status == "success") {
    locations = locationsData.data.items 
  } if (locationsData.status == "error") {
    console.log(locationsData.error)  
  } 

} catch(err) {
  console.log(err)
}

let tags: tag[] = []
try {

  const endpoint = API_HOST + "/tag/blog"
  const tagsResult = await fetch(endpoint, {
    headers: {
      "Accept-Language": "es"
    }
  })
  const tagsData = await tagsResult.json()

  if (tagsData.status == "success") {
    tags = tagsData.data.items 
  } if (tagsData.status == "error") {
    console.log(tagsData.error)  
  } 

} catch(err) {
  console.log(err)
}

let counts : counts = { all: 0, whiskys: 0, rums: 0, beers: 0, wines: 0, others: 0 }

try {

  const endpoint = API_HOST + "/drinks/blog/count"

  const countsResult = await fetch(endpoint)
  const countsData = await countsResult.json()

  if (countsData.status == "success") {
    counts = countsData.data
  }

} catch(err) {
  console.log(err)
}

---

<Layout title="50 BEERS: Exploring beverages around the world">
  <section class="h-96 w-full flex justify-center items-center flex-col">
    <h1 class="font-title text-5xl md:text-7xl font-normal text-dark p-10">
      50 <span class="text-light bg-dark px-1">BEERS</span>
    </h1> 
    <p class="font-content text-lg md:text-2xl">SOLO <span class="line-through">BEBIENDO</span> ESCRIBIENDO PARA PARECER OCUPADO</p>
  </section>
  <section class="p-7">
    <PostSection 
      countries={countries}
      locations={locations}
      tags={tags}
      lang={postsLang}
      client:load 
     /> 
  </section>
  <section class="w-full bg-dark mt-5 text-light px-10 py-24 flex flex-col items-center justify-center gap-8">
    <p class="text-center">
      En <span class="font-bold">Octubre del 2023</span> comenzé mi viaje. Desde entonces he probado un total de <span class="font-bold">{counts.all}</span> bebidas distintas. <br/> Entre ellas podemos contar...
    </p>

    <div class="flex w-full flex-col gap-8 items-center justify-center sm:flex-row">

      <div class="flex text-3xl font-title flex-col items-center justify-center">
        <p>{counts.whiskys}</p>
        <p>WHISKYS</p>
      </div>

      <div class="flex text-3xl font-title flex-col items-center justify-center">
        <p>{counts.rums}</p>
        <p>RONES</p>
      </div>

      <div class="flex text-3xl font-title flex-col items-center justify-center">
        <p>{counts.beers}</p>
        <p>CERVEZAS</p>
      </div>

      <div class="flex text-3xl font-title flex-col items-center justify-center">
        <p>{counts.wines}</p>
        <p>VINOS</p>
      </div>

      <div class="flex text-3xl font-title flex-col items-center justify-center">
        <p>{counts.others}</p>
        <p>OTROS</p>
      </div>

    </div>

    <p class="text-center">
      Todas ellas documentadas aquí.
    </p>
  </section>
  <section class="w-full text-dark px-10 py-16 flex flex-col md:flex-row md:justify-center gap-10">
    <div class="w-full font-title flex flex-col items-center md:items-start">
      <p class="text-2xl sm:text-3xl">¿Te gusta mi contenido?</p>
      <p class="text-light bg-dark inline-block p-2 mt-5 text-3xl sm:text-4xl">¿Necesitas un programador?</p>
      <p class="text-xl sm:text-2xl mt-5">¿Quieres instultarme porque no me gustó tu cerveza favorita?</p>
      <p class="text-3xl sm:text-4xl mt-12">¡Sientete libre de contactarme!</p>
    </div>
    <div class="w-full flex justify-center items-center">
      <ContactForm content={contactLang}  client:load/>
    </div>
  </section>
</Layout>
